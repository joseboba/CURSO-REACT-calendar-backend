{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/eventActions.js","actions/authActions.js","hooks/useForm.js","components/auth/LoginScreen.jsx","helpers/calendar-messages-es.js","components/ui/Navbar.jsx","components/calendar/CalendarEvent.jsx","actions/uiActions.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","router/PrivateRoutes.jsx","router/PublicRoutes.jsx","router/AppRouter.jsx","reducers/authReducer.js","reducers/caledarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.jsx","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","msg","Swal","fire","errors","placeholder","onChange","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","Navbar","useSelector","state","auth","onClick","clear","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","after","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","onDoubleClickEvent","onSelectEvent","eventPropGetter","isSelected","backgroundColor","opacity","display","color","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoutes","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14dba0ef.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl}/${endpoint} `; // localhost:4000/api\r\n\r\n    if( method === 'GET' ){\r\n        return fetch( url );\r\n    }else{\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl}/${endpoint} `; // localhost:4000/api\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if( method === 'GET' ){\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }    \r\n}\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","\r\nexport const types = {\r\n    uiOpenModal: '[ui] Open Modal',\r\n    uiCloseModal: '[ui] Close Modal',\r\n\r\n    eventStartNew: '[event] Event Start New',\r\n    eventLogout: '[event] Logout Event',\r\n    eventSetActive: '[event] Set Active',\r\n    eventAddNew: '[event] Add new',\r\n    clearActiveEvent: '[event] Clear active event',\r\n    eventUpdate: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events Loaded',\r\n\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Login',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n}","import moment from \"moment\";\n\nexport const prepareEvents =( events = []) => {\n\n    \n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate()\n        })\n    );\n\n    \n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    \r\n    return async(dispatch, getState)=>{\r\n\r\n        const {uid, name} = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                dispatch(eventAddNew(event))\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }        \r\n\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => {\r\n    return {\r\n        type: types.eventAddNew,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const eventSetActive = (event) => {\r\n    return {\r\n        type: types.eventSetActive,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const eventClearActiveEvent = () => {\r\n    return {\r\n        type: types.clearActiveEvent\r\n    }\r\n}\r\n\r\n\r\nexport const eventStartUpdated = (event) => {\r\n    return async(dispatch) =>{\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventUpdated(event));\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventUpdated = ( event ) => {\r\n    return{\r\n        type: types.eventUpdate,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const eventStartDelete = () => {\r\n    \r\n    return async(dispatch, getState) =>{\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if(body.ok){\r\n                dispatch(eventDeleted());\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => {\r\n    return{\r\n        type: types.eventDeleted\r\n    }\r\n}\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = body.eventos;\r\n\r\n            prepareEvents(body.eventos);\r\n            dispatch(eventLoaded(events))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => {\r\n    return{\r\n        type: types.eventLoaded,\r\n        payload: events\r\n    }\r\n}\r\n\r\nexport const eventLogout = () => {\r\n    return {\r\n        type: types.eventLogout\r\n    }\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./eventActions\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async(dispatch) => {\r\n        \r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            if( body.msg ){ \r\n                Swal.fire('Error', body.msg, 'error')\r\n            }else{\r\n                if(body.errors.password) Swal.fire('Error',body.errors.password.msg, 'error')\r\n                else Swal.fire('Error', body.errors.email.msg, 'error')\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n\r\n    \r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            if( body.msg ){ \r\n                Swal.fire('Error', body.msg, 'error')\r\n            }else{\r\n                if(body.errors.password) {\r\n                    Swal.fire('Error',body.errors.password.msg, 'error')\r\n                }\r\n                else if(body.errors.email){ \r\n                    Swal.fire('Error', body.errors.email.msg, 'error')\r\n                }else{\r\n                    Swal.fire('Error', body.errors.name.msg, 'error')\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => {\r\n    return{\r\n        type: types.authCheckingFinish\r\n    }\r\n} \r\n\r\n\r\nconst login = ( user ) => {\r\n    return {\r\n        type: types.authLogin,\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async(dispatch) => {\r\n        \r\n        localStorage.clear();\r\n        dispatch(logout())\r\n        dispatch(eventLogout())\r\n\r\n    }\r\n}\r\n\r\nconst logout = () => {\r\n    return {\r\n        type: types.authLogout\r\n    }\r\n}","  \r\nimport { useState } from \"react\"\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/authActions';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport '../../styles/auth/login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'joseboba@gmail.com',\r\n        lPassword: '123456'\r\n    })\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Sergio',\r\n        rEmail: 'speralta@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    })\r\n    \r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword))\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( rPassword1 !== rPassword2 ){\r\n            return Swal.fire('Error', 'Las contraseñas no coinciden', 'error')\r\n        }\r\n\r\n        dispatch(startRegister(rEmail, rPassword2, rName))\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n        <div className=\"row\">\r\n            <div className=\"col-md-6 login-form-1\">\r\n                <h3>Ingreso</h3>\r\n                <form onSubmit={ handleLogin }>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Correo\"\r\n                            name=\"lEmail\"\r\n                            value={lEmail}\r\n                            onChange={handleLoginInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Contraseña\"\r\n                            name=\"lPassword\"\r\n                            value={lPassword}\r\n                            onChange={handleLoginInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"submit\"\r\n                            className=\"btnSubmit\"\r\n                            value=\"Login\" \r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"col-md-6 login-form-2\">\r\n                <h3>Registro</h3>\r\n                <form onSubmit={ handleRegister }>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Nombre\"\r\n                            name=\"rName\"\r\n                            value={ rName }\r\n                            onChange={handleRegisterInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Correo\"\r\n                            name=\"rEmail\"\r\n                            value={ rEmail }\r\n                            onChange={handleRegisterInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Contraseña\"\r\n                            name=\"rPassword1\"\r\n                            value={ rPassword1 }\r\n                            onChange={handleRegisterInputChange} \r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Repita la contraseña\"\r\n                            name=\"rPassword2\"\r\n                            value={ rPassword2 }\r\n                            onChange={ handleRegisterInputChange } \r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"submit\" \r\n                            className=\"btnSubmit\" \r\n                            value=\"Crear cuenta\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/authActions'\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n                <span className=\"navbar-brand\">\r\n                    { name }\r\n                </span>\r\n\r\n                <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                    <span> Salir </span>\r\n                </button>\r\n            </div>   \r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <span> { title } </span>\r\n                <strong> { user.name } </strong>\r\n            </div>   \r\n        </>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const uiOpenModal = () => {\r\n    return {\r\n        type: types.uiOpenModal\r\n    }\r\n}\r\n\r\nexport const uiCloseModal = () => {\r\n    return {\r\n        type: types.uiCloseModal\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/uiActions';\r\nimport {  eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/eventActions';\r\n \r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hour');\r\nconst after = now.clone().add(1, 'hour')\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: after.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(after.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n\r\n    useEffect(() => {\r\n        if( activeEvent ){\r\n            setFormValues( activeEvent )\r\n        }else{\r\n            setFormValues( initEvent )\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n    \r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch( eventClearActiveEvent() )\r\n        setFormValues(initEvent)\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDate = (e) => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if(momentStart.isSameOrAfter( momentEnd )){\r\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if( title.trim().length < 2 ){\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if( activeEvent ){\r\n            dispatch(eventStartUpdated( formValues ))\r\n        }else{\r\n            dispatch( eventStartAddNew(formValues))\r\n        }\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal()\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <Modal\r\n          isOpen={ modalOpen }\r\n        //   onAfterOpen={afterOpenModal}\r\n          onRequestClose={ closeModal }\r\n          style={customStyles}\r\n          closeTimeoutMS={ 200 }\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n        <hr />\r\n        <form className=\"container\" onSubmit={ handleSubmitForm }>\r\n            \r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora inicio</label>\r\n                <DateTimePicker\r\n                    onChange={ handleStartDateChange }\r\n                    value={ dateStart }\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n                <label>Fecha y hora fin</label>\r\n                <DateTimePicker\r\n                    onChange={ handleEndDate }\r\n                    value={ dateEnd }\r\n                    minDate={ dateStart }\r\n                    className=\"form-control\"\r\n                />\r\n            </div>\r\n            \r\n            <hr />\r\n            <div className=\"form-group\">\r\n                <label>Titulo y notas</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className={`form-control ${ !titleValid && 'is-invalid' }`}\r\n                    placeholder=\"Título del evento\"\r\n                    name=\"title\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                    autoComplete=\"off\"\r\n                />\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n                <textarea \r\n                    type=\"text\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Notas\"\r\n                    rows=\"5\"\r\n                    name=\"notes\"\r\n                    value={ notes }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n            </div>\r\n            \r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn-outline-primary btn-block\"\r\n            >\r\n                <i className=\"far fa-save\"></i>\r\n                <span> Guardar</span>\r\n            </button>\r\n            \r\n        </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {uiOpenModal } from '../../actions/uiActions'\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleOnClick = () => {\r\n        dispatch(uiOpenModal())\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={ handleOnClick }>\r\n            <i className=\"fas fa-plus\"> </i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/eventActions';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete())\r\n    }\r\n\r\n    return (\r\n        <button className=\" btn btn-danger fab-danger\" onClick={ handleDelete }>\r\n          <i className=\"fas fa-trash\"></i> \r\n          <span> Borrar evento </span> \r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from 'moment'\r\nimport 'moment/locale/es'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\nimport { Navbar } from '../ui/Navbar'\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { useState } from 'react';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/uiActions';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/eventActions';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport { useEffect } from 'react';\r\n\r\n\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state)\r\n    const { events } = useSelector(state => state.calendar)\r\n    const { uid } = useSelector(state => state.auth)\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() )\r\n    }\r\n\r\n    const onDobleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView( e )\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const eventStylesGetter = (event, start, end, isSelected) => {\r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"calendar-screen\">\r\n                <Navbar /> \r\n\r\n                <Calendar\r\n                localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                onDoubleClickEvent = { onDobleClick }\r\n                onSelectEvent = { onSelectEvent }\r\n                eventPropGetter={ eventStylesGetter }\r\n                onView={ onViewChange }\r\n                onSelectSlot = { onSelectSlot }\r\n                selectable = { true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                /> \r\n\r\n                {\r\n                    (state.calendar.activeEvent) && <DeleteEventFab />\r\n                }\r\n                <AddNewFab />\r\n                <CalendarModal />\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n        //Estoy recuperanto la ultima ruta para que cuando ya este autenticado lo redireccione a la página donde estaba\r\n        // localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n        return (\r\n            <Route { ...rest }\r\n                component={ (props) => (\r\n                    (isAuthenticated)\r\n                        ? (<Component {...props}/>)\r\n                        : (<Redirect to='/login' />)\r\n                )}\r\n            />\r\n        )\r\n\r\n\r\n}\r\n\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PublicRoutes = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    // const lastLocation = localStorage.getItem('lastPath');\r\n\r\n    return (\r\n       <Route { ...rest }\r\n            component= { (props) => (\r\n                (!isAuthenticated)\r\n                    ? <Component { ...props }/>\r\n                    : <Redirect to='/'/>\r\n            )}\r\n       />\r\n    )\r\n}\r\n\r\nPublicRoutes.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/authActions';\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen'\r\nimport { PrivateRoute } from './PrivateRoutes';\r\nimport { PublicRoutes } from './PublicRoutes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n    \r\n    useEffect(() => {\r\n        dispatch(startChecking())\r\n    }, [dispatch])\r\n\r\n    if(checking) { \r\n        return <h5> Espere.. </h5>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        \r\n                        <PublicRoutes \r\n                            exact\r\n                            path=\"/login\"\r\n                            component={LoginScreen}\r\n                            isAuthenticated={ !!uid }\r\n                        />\r\n                        <PrivateRoute exact path=\"/\" component={ CalendarScreen } isAuthenticated={!!uid}/>\r\n\r\n                        <Redirect to=\"/\"/>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )   \r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true\r\n}\r\n\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    switch (action.type) {\r\n\r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     bgcolor: '#fafafa',\r\n//     user:{\r\n//         _id: '123',\r\n//         name: 'Jose Enrique'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.eventAddNew: \r\n        return{\r\n            ...state,\r\n            events: [\r\n                ...state.events,\r\n                action.payload\r\n            ]\r\n        }\r\n\r\n        case types.eventSetActive:\r\n            return{\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.clearActiveEvent:\r\n            return{\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded: \r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n    \r\n        case types.eventLogout:\r\n            return{\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./caledarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { AppRouter } from './router/AppRouter'\r\nimport { store } from './store/store'\r\nimport './styles/styles.css'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />  \r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}